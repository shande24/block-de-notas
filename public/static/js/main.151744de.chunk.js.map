{"version":3,"sources":["components/NotesList.js","components/Form.js","components/SelectedNote.js","App.js","index.js"],"names":["NotesList","notes","setSelectedNote","searchingValue","useState","searchedNotes","setSearchedNotes","useEffect","forEach","note","newSearchedNotes","includes","title","push","className","map","onClick","_","text","basicValue","Form","submit","isModalOn","setModalOn","newNote","setNewNote","e","target","classList","closeModal","onSubmit","preventDefault","prev","alert","class","onChange","value","placeholder","type","id","for","rows","SelectedNote","selectedNote","editing","setEditing","console","log","p","App","setNotes","setSearchingValue","axios","get","then","res","data","post","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151744de.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nconst NotesList = ({notes, setSelectedNote, searchingValue}) =>{\r\n    const [searchedNotes, setSearchedNotes] = useState([])\r\n    useEffect(() => {\r\n        notes.forEach(note => {\r\n            let newSearchedNotes = []\r\n            if(searchingValue.includes(note.title) && searchingValue !== \"\"){\r\n                 newSearchedNotes.push(note)\r\n                 setSearchedNotes(newSearchedNotes)\r\n            }else{\r\n                setSearchedNotes(notes)\r\n            }\r\n            \r\n        });\r\n    }, [searchingValue, notes, searchedNotes])\r\n\r\n    return(\r\n        <section className=\"notesSection overflow-auto\">\r\n            {searchedNotes.map(note => (\r\n                <div onClick={_ => setSelectedNote({text:note.text, title:note.title})} className=\"note\"> {note.title} </div>\r\n            )\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NotesList","import { useState } from \"react\"\r\n\r\nconst basicValue ={title:\"\", text:\"\"}\r\n\r\nconst Form = ({submit, isModalOn, setModalOn}) =>{\r\n    const [newNote, setNewNote] = useState(basicValue)\r\n    \r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(newNote.title !== \"\" && newNote.text !== \"\") { \r\n            submit(newNote)\r\n            setNewNote(prev => ({...prev, text:\"\", title:\"\"}))\r\n        }\r\n        else alert(\"Falta titulo o texto!\")\r\n        \r\n    }\r\n\r\n    const closeModal = e => e.target.classList[0] === \"formModal\" && setModalOn(false)\r\n\r\n    return(\r\n        <section onClick={e => closeModal(e)} className={`formModal ${isModalOn ? \"\" : \"d-none\"}`}>\r\n            <div className=\"formModalCard\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Title</label>\r\n                        <input onChange={e => setNewNote(prev => ({...prev, title:e.target.value}))} value={newNote.title} placeholder=\"Title\" type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  />\r\n                    </div>\r\n                    <div class=\"mb-3 \">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Text</label>\r\n                        <textarea onChange={e => setNewNote(prev => ({...prev, text:e.target.value}))} value={newNote.text} placeholder=\"Text\" class=\"form-control \" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                    </div>\r\n                    <div className=\"d-flex  alig-items-center justify-content-center gap-5\"> \r\n                    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\r\n                    <button onClick={_ => setModalOn(false)} type=\"button\" class=\"btn btn-danger\">Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Form","import * as Icon from 'react-bootstrap-icons'\r\nimport { useState } from 'react'\r\nconst SelectedNote = ({selectedNote, setSelectedNote}) =>{\r\n    const {title, text} = selectedNote\r\n    const [editing, setEditing] = useState(false)\r\n    console.log(selectedNote);\r\n    return(\r\n        <section className=\"w-100 d-flex flex-column align-items-start\">\r\n            <div className=\"d-flex\">\r\n                <button onClick={_ => setSelectedNote(null)} className={`btn-main ${editing ? \"d-none\" : \"\"}`}> <Icon.ArrowLeft/> </button>\r\n                <button onClick={_ => setEditing(p => !p)} className=\"btn-main\"> { editing ? <Icon.XCircleFill/> : <Icon.PencilFill/>} </button>\r\n            </div>\r\n            <h5> {title} </h5>\r\n            <p> {text} </p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SelectedNote","import './App.css';\nimport * as Icon from 'react-bootstrap-icons'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react';\n\n\n//Componentes:\nimport NotesList from './components/NotesList'\nimport Form from './components/Form'\nimport SelectedNote from './components/SelectedNote'\n\n\n\nfunction App() {\n  const [isModalOn, setModalOn] = useState(false)\n  const [notes, setNotes] = useState([])\n  const [selectedNote, setSelectedNote] = useState(null)\n  const [searchingValue, setSearchingValue] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(\"/api/notes\")\n    .then(res => setNotes(res.data.notes))\n  }, [])\n\n  //Funciones:\n  const submit = newNote =>{\n    console.log(newNote);\n    axios.post(\"/api/notes\",  newNote)\n    .then(res => setNotes([...notes, res.data]))\n  }\n\n  return (\n    <main className=\"main mt-3\">\n      <section className=\"searchSection\">\n        <Icon.Search/>\n        <input type=\"search\" value={searchingValue} onChange={e => setSearchingValue(e.target.value)}></input>\n      </section>\n      <section className=\"btnSection\">\n        <button onClick={_ => setModalOn(true)} className=\"btn-main\"> <Icon.Plus/> </button>\n        <button className=\"btn-main\"> <Icon.CardList/> </button>\n      </section>\n\n      {selectedNote ? <SelectedNote selectedNote={selectedNote} setSelectedNote={setSelectedNote} />: <NotesList searchingValue={searchingValue} notes={notes} setSelectedNote={setSelectedNote} />}\n\n      <Form submit={submit} isModalOn={isModalOn} setModalOn={setModalOn} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}